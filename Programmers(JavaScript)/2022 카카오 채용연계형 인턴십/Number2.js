function solution(origin_queue1, origin_queue2) {
    let answer = 0;

    let queue1 = [...origin_queue1];
    let queue2 = [...origin_queue2];
    let sum1 = 0;
    let sum2 = 0;

    let queue1_history = [origin_queue1];
    let queue2_history = [origin_queue2];

    while (true) {
        if (queue1.length == 0 || queue2.length == 0) {
            console.log(queue1)
            return -1;
        }

        sum1 = queue1.reduce((a, b) => (a + b));
        sum2 = queue2.reduce((a, b) => (a + b));

        if ((sum1 + sum2) % 2) {
            return -1;
        }

        console.log(sum1)
        console.log(sum2)

        if (sum1 == sum2) {
            break;
        }

        if (sum1 < sum2) {
            let shift_sum = 0;
            while (sum2 - sum1 > shift_sum * 2) {
                const num = queue2.shift();
                queue1.push(num);
                shift_sum += num;
                answer += 1;
            }
        } else {
            let shift_sum = 0;
            while (sum1 - sum2 > shift_sum * 2) {
                const num = queue1.shift();
                queue2.push(num);
                shift_sum += num;
                answer += 1;
            }
        }

        if(queue1_history.includes(JSON.stringify(queue1)) || queue2_history.includes(JSON.stringify(queue2))) {
            return -1;
        }

        queue1_history.push(JSON.stringify(queue1));
        queue2_history.push(JSON.stringify(queue2));
    }

    return answer;
}

const testCase = [
    {
        "queue1": [3, 2, 7, 2],
        "queue2": [4, 6, 5, 1],
        "result": 2
    },
    {
        "queue1": [1, 2, 1, 2],
        "queue2": [1, 10, 1, 2],
        "result": 7
    },
    {
        "queue1": [1, 1],
        "queue2": [1, 5],
        "result": -1
    },
    {
        "queue1": [4, 4, 4],
        "queue2": [4, 4, 4, 4],
        "result": -1
    },
    {
        "queue1": [4, 2, 4],
        "queue2": [4, 4, 4],
        "result": -1
    },
    {
        "queue1": [5, 5, 5, 5, 5, 1],
        "queue2": [5, 5, 5, 1, 1, 1, 1, 5],
        "result": 11
    },
    {
        "queue1": [5, 5, 1, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 5, 5, 5, 5, 5, 1, 1, 5, 5, 5, 5, 5, 1, 1, 5, 5, 5, 5, 5, 1, 5, 5, 5, 5, 5, 1, 5, 5, 5, 5, 5, 1, 1, 5, 5, 5, 5, 5, 1, 1, 5, 5, 5, 5, 5, 1, 1, 5, 5, 5, 5, 5, 1, 5, 5, 5, 5, 5, 1, 5, 5, 5, 5, 5, 1, 1, 5, 5, 5, 5, 5, 1, 1, 5, 5, 5, 5, 5, 1, 1, 5, 5, 5, 5, 5, 1, 5, 5, 5, 5, 5, 1, 5, 5, 5, 5, 5, 1, 1, 5, 5, 5, 5, 5, 1, 1, 5, 5, 5, 5, 5, 1, 1, 5, 5, 5, 5, 5, 1, 5, 5, 5, 5, 5, 1, 5, 5, 5, 5, 5, 1, 1, 5, 5, 5, 5, 5, 1, 1, 5, 5, 5, 5, 5, 1, 1, 5, 5, 5, 5, 5, 15, 5, 5, 5, 5, 1, 5, 5, 5, 5, 5, 1, 1, 5, 5, 5, 5, 5, 1, 1, 5, 5, 5, 5, 5, 1, 1, 5, 5, 5, 5, 5, 15, 5, 5, 5, 5, 1, 5, 5, 5, 5, 5, 1, 1, 5, 5, 5, 5, 5, 1, 1, 5, 5, 5, 5, 5, 1, 1, 5, 5, 5, 5, 5, 15, 5, 5, 5, 5, 1, 5, 5, 5, 5, 5, 1, 1, 5, 5, 5, 5, 5, 1, 1, 5, 5, 5, 5, 5, 1, 1, 5, 5, 5, 5, 5, 15, 5, 5, 5, 5, 1, 5, 5, 5, 5, 5, 1, 1, 5, 5, 5, 5, 5, 1, 1, 5, 5, 5, 5, 5, 1, 1, 5, 5, 5, 5, 5, 15, 5, 5, 5, 5, 1, 5, 5, 5, 5, 5, 1, 1, 5, 5, 5, 5, 5, 1, 1, 5, 5, 5, 5, 5, 1, 1, 5, 5, 5, 5, 5, 15, 5, 5, 5, 5, 1, 5, 5, 5, 5, 5, 1, 1, 5, 5, 5, 5, 5, 1, 1, 5, 5, 5, 5, 5, 1, 1, 5, 5, 5, 5, 5, 15, 5, 5, 5, 5, 1, 5, 5, 5, 5, 5, 1, 1, 5, 5, 5, 5, 5, 1, 1, 5, 5, 5, 5, 5, 1, 1, 5, 5, 5, 5, 5, 15, 5, 5, 5, 5, 1, 5, 5, 5, 5, 5, 1, 1, 5, 5, 5, 5, 5, 1, 1, 5, 5, 5, 5, 5, 1, 1, 5, 5, 5, 5, 5, 15, 5, 5, 5, 5, 1, 5, 5, 5, 5, 5, 1, 1, 5, 5, 5, 5, 5, 1, 1, 5, 5, 5, 5, 5, 1, 1, 5, 5, 5, 5, 5, 15, 5, 5, 5, 5, 1, 5, 5, 5, 5, 5, 1, 1, 5, 5, 5, 5, 5, 1, 1, 5, 5, 5, 5, 5, 1, 1, 5, 5, 5, 5, 5, 15, 5, 5, 5, 5, 1, 5, 5, 5, 5, 5, 1, 1, 5, 5, 5, 5, 5, 1, 1, 5, 5, 5, 5, 5, 1, 1, 5, 5, 5, 5, 5, 15, 5, 5, 5, 5, 1, 5, 5, 5, 5, 5, 1, 1, 5, 5, 5, 5, 5, 1, 1, 5, 5, 5, 5, 5, 1, 1, 5, 5, 5, 5, 5, 15, 5, 5, 5, 5, 1, 5, 5, 5, 5, 5, 1, 1, 5, 5, 5, 5, 5, 1, 1, 5, 5, 5, 5, 5, 1, 1, 5, 5, 5, 5, 5, 15, 5, 5, 5, 5, 1, 5, 5, 5, 5, 5, 1, 1, 5, 5, 5, 5, 5, 1, 1, 5, 5, 5, 5, 5, 1, 1, 5, 5, 5, 5, 5, 15, 5, 5, 5, 5, 1, 5, 5, 5, 5, 5, 1, 1, 5, 5, 5, 5, 5, 1, 1, 5, 5, 5, 5, 5, 1, 1, 5, 5, 5, 5, 5, 15, 5, 5, 5, 5, 1, 5, 5, 5, 5, 5, 1, 1, 5, 5, 5, 5, 5, 1, 1, 5, 5, 5, 5, 5, 1, 1, 5, 5, 5, 5, 5, 15, 5, 5, 5, 5, 1, 5, 5, 5, 5, 5, 1, 1, 5, 5, 5, 5, 5, 1, 1, 5, 5, 5, 5, 5, 1, 1, 5, 5, 5, 5, 5, 15, 5, 5, 5, 5, 1, 5, 5, 5, 5, 5, 1, 1, 5, 5, 5, 5, 5, 1, 1, 5, 5, 5, 5, 5, 1, 1, 5, 5, 5, 5, 5, 15, 5, 5, 5, 5, 1, 5, 5, 5, 5, 5, 1, 1, 5, 5, 5, 5, 5, 1, 1, 5, 5, 5, 5, 5, 1, 1, 5, 5, 5, 5, 5, 15, 5, 5, 5, 5, 1, 5, 5, 5, 5, 5, 1, 1, 5, 5, 5, 5, 5, 1, 1, 5, 5, 5, 5, 5, 1, 1, 5, 5, 5, 5, 5, 15, 5, 5, 5, 5, 1, 5, 5, 5, 5, 5, 1, 1, 5, 5, 5, 5, 5, 1, 1, 5, 5, 5, 5, 5, 1, 1, 5, 5, 5, 5, 5, 15, 5, 5, 5, 5, 1, 5, 5, 5, 5, 5, 1, 1, 5, 5, 5, 5, 5, 1, 1, 5, 5, 5, 5, 5, 1, 1, 5, 5, 5, 5, 5, 15, 5, 5, 5, 5, 1, 5, 5, 5, 5, 5, 1, 1, 5, 5, 5, 5, 5, 1, 1, 5, 5, 5, 5, 5, 1, 1, 5, 5, 5, 5, 5, 15, 5, 5, 5, 5, 1, 5, 5, 5, 5, 5, 1, 1, 5, 5, 5, 5, 5, 1, 1, 5, 5, 5, 5, 5, 1, 1, 5, 5, 5, 5, 5, 15, 5, 5, 5, 5, 1, 5, 5, 5, 5, 5, 1, 1, 5, 5, 5, 5, 5, 1, 1, 5, 5, 5, 5, 5, 1, 1, 5, 5, 5, 5, 5, 15, 5, 5, 5, 5, 1, 5, 5, 5, 5, 5, 1, 1, 5, 5, 5, 5, 5, 1, 1, 5, 5, 5, 5, 5, 1, 1, 5, 5, 5, 5, 5, 15, 5, 5, 5, 5, 1, 5, 5, 5, 5, 5, 1, 1, 5, 5, 5, 5, 5, 1, 1, 5, 5, 5, 5, 5, 1, 1, 5, 5, 5, 5, 5, 15, 5, 5, 5, 5, 1, 5, 5, 5, 5, 5, 1, 1, 5, 5, 5, 5, 5, 1, 1, 5, 5, 5, 5, 5, 1, 1, 5, 5, 5, 5, 5, 15, 5, 5, 5, 5, 1, 5, 5, 5, 5, 5, 1, 1, 5, 5, 5, 5, 5, 1, 1, 5, 5, 5, 5, 5, 1, 1, 5, 5, 5, 5, 5, 15, 5, 5, 5, 5, 1, 5, 5, 5, 5, 5, 1, 1, 5, 5, 5, 5, 5, 1, 1, 5, 5, 5, 5, 5, 1, 1, 5, 5, 5, 5, 5, 1, 1],
        "queue2": [5, 5, 5, 1, 1, 1, 5, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 5, 1, 5, 5, 5, 5, 5, 1, 1, 5, 5, 5, 5, 5, 1, 1, 5, 5, 5, 34843857, 19289, 19283, 31298, 12921, 19281, 81283, 1],
        "result": 11
    },
]

testCase.forEach((test) => {
    const result = solution(test.queue1, test.queue2);
    console.log("-------------------------------------------")
    console.log("입력값 )", test.queue1 + " | " + test.queue2);
    console.log("기댓값 )", test.result);
    console.log("실행 결과 )", result);
})